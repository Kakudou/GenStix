project:
  constraints:
    AttackPatternCheckUnicityByTypeName:
      description: As stated by the 2.1 documentation, the fields name and type are
        required, so they can be used as unique identifiers for AttackPattern unicity.
      domain: sdos/attack_pattern
      given: Multiple AttackPatterns are created with the same <name> and <type_>.
      name: AttackPatternCheckUnicityByTypeName
      scenario: Creating multiple AttackPatterns with the same name and type.
      then: A NameError exception should be raised with the message 'The AttackPattern
        you want, already exists'.
      type: gen_stix
      when: An AttackPattern is created.
    AttackPatternStix21ConstraintAliases:
      description: As stated by the 2.1 documentation, the aliases field should be
        a list of strings.
      domain: sdos/attack_pattern
      given: An AttackPattern is created with a <type_>, <name>, and invalid <aliases>.
      name: AttackPatternStix21ConstraintAliases
      scenario: Creating an AttackPattern with invalid aliases.
      then: A TypeError should be raised, stating that <aliases> should be a list
        of strings.
      type: gen_stix
      when: The AttackPattern is created.
    AttackPatternStix21ConstraintDescription:
      description: As stated by the 2.1 documentation, the description field should
        be a string.
      domain: sdos/attack_pattern
      given: An AttackPattern is created with a <type_>, <name>, and invalid <description>.
      name: AttackPatternStix21ConstraintDescription
      scenario: Creating an AttackPattern with an invalid description.
      then: A TypeError should be raised, stating that <description> should be of
        type string.
      type: gen_stix
      when: The AttackPattern is created.
    AttackPatternStix21ConstraintExternalReferences:
      description: As stated by the 2.1 documentation, the external_references field
        should be a list of external-references.
      domain: sdos/attack_pattern
      given: An AttackPattern is created with a <type_>, <name>, and invalid <external_references>.
      name: AttackPatternStix21ConstraintExternalReferences
      scenario: Creating an AttackPattern with invalid external_references.
      then: A ValueError should be raised, stating that <external_references> should
        be a list of external-references.
      type: gen_stix
      when: The AttackPattern is created.
    AttackPatternStix21ConstraintKillChainPhases:
      description: As stated by the 2.1 documentation, the kill_chain_phases field
        should be a list of kill-chain-phases.
      domain: sdos/attack_pattern
      given: An AttackPattern is created with a <type_>, <name>, and invalid <kill_chain_phases>.
      name: AttackPatternStix21ConstraintKillChainPhases
      scenario: Creating an AttackPattern with invalid kill_chain_phases.
      then: A ValueError should be raised, stating that <kill_chain_phases> should
        be a list of kill-chain-phases.
      type: gen_stix
      when: The AttackPattern is created.
    AttackPatternStix21ConstraintName:
      description: As stated in the 2.1 documentation, the value of name should be
        a string.
      domain: sdos/attack_pattern
      given: An AttackPattern is created with a <name> that is not a string and a
        valid <type_>.
      name: AttackPatternStix21ConstraintName
      scenario: Creating an AttackPattern with an invalid name.
      then: A TypeError should be raised, stating that the value of name must be a
        string.
      type: gen_stix
      when: The AttackPattern is created.
    AttackPatternStix21ConstraintType:
      description: As stated in the 2.1 documentation, the value of type MUST be `attack-pattern`.
      domain: sdos/attack_pattern
      given: An AttackPattern is created with a <type_> different from `attack-pattern`
        and a valid <name>.
      name: AttackPatternStix21ConstraintType
      scenario: Creating an AttackPattern with an invalid type.
      then: A ValueError should be raised, stating that the value of type must be
        `attack-pattern`.
      type: gen_stix
      when: The AttackPattern is created.
    AttackPatternStix21OptionalFields:
      description: The AttackPattern object should accept the following optional fields
        external_references, description, aliases, kill_chain_phases.
      domain: sdos/attack_pattern
      given: An AttackPattern is created with <external_references>, <description>,
        <aliases>, <kill_chain_phases>, a <name>, and a <type_>.
      name: AttackPatternStix21OptionalFields
      scenario: Creating an AttackPattern with all or some optional fields filled.
      then: The fields <external_references>, <description>, <aliases>, <kill_chain_phases>,
        <name>, and <type_> should match the input values.
      type: gen_stix
      when: The AttackPattern is created.
    AttackPatternStix21RequiredName:
      description: To create a valid STIX 2.1 AttackPattern, the name is a required
        field.
      domain: sdos/attack_pattern
      given: An AttackPattern is created without any name but with a <type_>.
      name: AttackPatternStix21RequiredName
      scenario: Creating an AttackPattern without a name.
      then: A ValueError should be raised, stating the requirements for the name field.
      type: gen_stix
      when: The AttackPattern is created.
    AttackPatternStix21RequiredType:
      description: To create a valid STIX 2.1 AttackPattern, the type is a required
        field.
      domain: sdos/attack_pattern
      given: An AttackPattern is created without any type but with a <name>.
      name: AttackPatternStix21RequiredType
      scenario: Creating an AttackPattern without a type.
      then: A ValueError should be raised, stating the requirements for the type field.
      type: gen_stix
      when: The AttackPattern is created.
    ExternalReferenceStix21ConstraintCapecId:
      description: When the source_name is "capec", the external_id field MUST be
        formatted as CAPEC-[id].
      domain: cdts/external_reference
      given: An ExternalReference is created with <source_name> set to "capec" and
        an invalid <external_id>.
      name: ExternalReferenceStix21ConstraintCapecId
      scenario: Creating an ExternalReference with source_name "capec" but an incorrectly
        formatted external_id.
      then: A ValueError should be raised, stating that <external_id> must be formatted
        as CAPEC-[id].
      type: gen_stix
      when: The ExternalReference is created.
    ExternalReferenceStix21ConstraintDescription:
      description: As stated in the 2.1 documentation, the description field, if present,
        must be a string.
      domain: cdts/external_reference
      given: An ExternalReference is created with <source_name> and invalid <description>.
      name: ExternalReferenceStix21ConstraintDescription
      scenario: Creating an ExternalReference with an invalid description.
      then: A TypeError should be raised, stating that <description> must be a string.
      type: gen_stix
      when: The ExternalReference is created.
    ExternalReferenceStix21ConstraintExternalId:
      description: As stated in the 2.1 documentation, the external_id field, if present,
        must be a string.
      domain: cdts/external_reference
      given: An ExternalReference is created with <source_name> and an invalid <external_id>.
      name: ExternalReferenceStix21ConstraintExternalId
      scenario: Creating an ExternalReference with an invalid external_id.
      then: A TypeError should be raised, stating that <external_id> must be a string.
      type: gen_stix
      when: The ExternalReference is created.
    ExternalReferenceStix21ConstraintHashes:
      description: As stated in the 2.1 documentation, the hashes field must be a
        dictionary of valid hashes, and a SHA-256 hash SHOULD be included when possible.
      domain: cdts/external_reference
      given: An ExternalReference is created with <source_name> and invalid <hashes>.
      name: ExternalReferenceStix21ConstraintHashes
      scenario: Creating an ExternalReference with invalid hashes or missing a SHA-256
        hash when a URL is present.
      then: A ValueError should be raised, stating that <hashes> must be a valid dictionary
        of hashes with SHA-256 included when possible.
      type: gen_stix
      when: The ExternalReference is created.
    ExternalReferenceStix21ConstraintSourceName:
      description: As stated in the 2.1 documentation, the source_name field, if present,
        must be a string.
      domain: cdts/external_reference
      given: An ExternalReference is created with an invalid <source_name>.
      name: ExternalReferenceStix21ConstraintSourceName
      scenario: Creating an ExternalReference with an invalid source_name.
      then: A TypeError should be raised, stating that <source_name> must be a string.
      type: gen_stix
      when: The ExternalReference is created.
    ExternalReferenceStix21ConstraintUrl:
      description: As stated in the 2.1 documentation, the url field, if present,
        must be a valid URL format as per RFC3986.
      domain: cdts/external_reference
      given: An ExternalReference is created with <source_name> and an invalid <url>.
      name: ExternalReferenceStix21ConstraintUrl
      scenario: Creating an ExternalReference with an invalid url.
      then: A ValueError should be raised, stating that <url> must conform to RFC3986.
      type: gen_stix
      when: The ExternalReference is created.
    ExternalReferenceStix21OptionalFields:
      description: The ExternalReference object should accept the following optional
        fields description, url, hashes, and external_id.
      domain: cdts/external_reference
      given: An ExternalReference is created with <source_name>, <description>, <url>,
        <hashes>, and <external_id>.
      name: ExternalReferenceStix21OptionalFields
      scenario: Creating an ExternalReference with all or some of the optional fields
        populated.
      then: The fields <description>, <url>, <hashes>, and <external_id> of the object
        should be as provided during creation.
      type: gen_stix
      when: The ExternalReference is created with optional fields.
    ExternalReferenceStix21RequiredSourceName:
      description: As stated in the 2.1 documentation, the source_name field is required
        and must be a string.
      domain: cdts/external_reference
      given: An ExternalReference is created without a <source_name>.
      name: ExternalReferenceStix21RequiredSourceName
      scenario: Creating an ExternalReference without a source_name.
      then: A ValueError should be raised, stating that <source_name> is required.
      type: gen_stix
      when: The ExternalReference is created.
    KillChainPhaseCheckUnicitykByPhaseNameKillChainName:
      description: The combination of kill_chain_name and phase_name must be unique.
      domain: cdts/kill_chain_phase
      given: Multiple Kill Chain Phases are created with the same <kill_chain_name>
        and <phase_name>.
      name: KillChainPhaseCheckUnicityByPhaseNameKillChainName
      scenario: Creating multiple Kill Chain Phases with the same kill_chain_name
        and phase_name.
      then: A NameError exception should be raised with the message 'The Kill Chain
        Phase you want already exists'.
      type: gen_stix
      when: A Kill Chain Phase is created.
    KillChainPhaseDuplicateSerializeStix21:
      description: Since the STIX2.1 id is only on the stix object, i need to check
        that multiple serialize DTO doesn't create a new stix object each time.
      domain: cdts/kill_chain_phase
      given: I create a Kill Chain Phase with <kill_chain_name> and <phase_name>.
      name: KillChainPhaseDuplicateSerializeStix21
      scenario: Serialize multiple time a Kill Chain Phase Core Object, and ensure
        only one stix2.1 is created.
      then: I should get the exact same stix2.1 object and no duplicate.
      type: infrastructure
      when: I serialize that object two times into STIX2.1.
    KillChainPhaseStix21ConstraintKillChainName:
      description: The kill_chain_name should be all lowercase and use hyphens instead
        of spaces or underscores as word separators.
      domain: cdts/kill_chain_phase
      given: An object is created with a <kill_chain_name> that is not all lowercase
        or contains spaces/underscores and a valid <phase_name>.
      name: KillChainPhaseStix21ConstraintKillChainName
      scenario: Creating an object with an invalid kill_chain_name format.
      then: A ValueError should be raised, stating that the kill_chain_name must be
        lowercase with hyphens.
      type: gen_stix
      when: A Kill Chain Phase is created.
    KillChainPhaseStix21ConstraintPhaseName:
      description: The phase_name should be all lowercase and use hyphens instead
        of spaces or underscores as word separators.
      domain: cdts/kill_chain_phase
      given: An object is created with a <phase_name> that is not all lowercase or
        contains spaces/underscores and a valid <kill_chain_name>.
      name: KillChainPhaseStix21ConstraintPhaseName
      scenario: Creating an object with an invalid phase_name format.
      then: A ValueError should be raised, stating that the phase_name must be lowercase
        with hyphens.
      type: gen_stix
      when: A Kill Chain Phase is created.
    KillChainPhaseStix21RequiredKillChainName:
      description: The kill_chain_name is a required field.
      domain: cdts/kill_chain_phase
      given: A Kill Chain Phase is created without a <kill_chain_name> and a valid
        <phase_name>.
      name: KillChainPhaseStix21RequiredKillChainName
      scenario: Creating a Kill Chain Phase without a kill_chain_name.
      then: A ValueError should be raised, stating that the kill_chain_name is required.
      type: gen_stix
      when: A Kill Chain Phase is created.
    KillChainPhaseStix21RequiredPhaseName:
      description: The phase_name is a required field.
      domain: cdts/kill_chain_phase
      given: A Kill Chain Phase is created without a <phase_name> and a valid <kill_chain_name>.
      name: KillChainPhaseStix21RequiredPhaseName
      scenario: Creating a Kill Chain Phase without a phase_name.
      then: A ValueError should be raised, stating that the phase_name is required.
      type: gen_stix
      when: A Kill Chain Phase is created.
  entities:
    AttackPattern:
      attributes:
        - description: The value of this property **MUST** be attack-pattern.
          identifier: true
          name: type_
          type: str
        - description: A list of external references which refer to non-STIX information.
            This property MAY be used to provide one or more Attack Pattern identifiers,
            such as a CAPEC ID. When specifying a CAPEC ID, the source_name property
            of the external reference MUST be set to capec and the external_id property
            MUST be formatted as CAPEC-[id].
          identifier: false
          name: external_references
          type: List
        - description: A name used to identify the Attack Pattern.
          identifier: true
          name: name
          type: str
        - description: A description that provides more details and context about
            the Attack Pattern, potentially including its purpose and its key characteristics.
          identifier: false
          name: description
          type: str
        - description: Alternative names used to identify this Attack Pattern.
          identifier: false
          name: aliases
          type: List[str]
        - description: The list of Kill Chain Phases for which this Attack Pattern
            is used.
          identifier: false
          name: kill_chain_phases
          type: List
      domain: sdos/attack_pattern
      name: AttackPattern
    ExternalReference:
      attributes:
        - description: The name of the source that the external-reference is defined
            within (system, registry, organization, etc.).
          identifier: true
          name: source_name
          type: str
        - description: A human readable description.
          identifier: false
          name: description
          type: str
        - description: A URL reference to an external resource [RFC3986].
          identifier: false
          name: url
          type: str
        - description: Specifies a dictionary of hashes for the contents of the url.
            This SHOULD be provided when the url property is present. Dictionary keys
            MUST come from one of the entries listed in the hash-algorithm-ov open
            vocabulary. As stated in Section 2.7, to ensure interoperability, a SHA-256
            hash SHOULD be included whenever possible.
          identifier: false
          name: hashes
          type: Dict
        - description: An identifier for the external reference content.
          identifier: true
          name: external_id
          type: str
      domain: cdts/external_reference
      name: ExternalReference
    KillChainPhase:
      attributes:
        - description: The name of the kill chain. The value of this property SHOULD
            be all lowercase and SHOULD use hyphens instead of spaces or underscores
            as word separators.
          identifier: true
          name: kill_chain_name
          type: str
        - description: The name of the phase in the kill chain. The value of this
            property SHOULD be all lowercase and SHOULD use hyphens instead of spaces
            or underscores as word separators.
          identifier: true
          name: phase_name
          type: str
      domain: cdts/kill_chain_phase
      name: KillChainPhase
  features:
    AccessKillChainPhase:
      description: When pressing 'r' on an existing kill chain phase object, i should
        access it.
      domain: cdts/kill_chain_phase
      given: I'm in the app in tui mode with a valid <projects_path>, <project_name>
        and i have a valid Kill Chain Phase created with <kill_chain_name> and a <phase_name>.
      name: AccessKillChainPhase
      scenario: Access an exisiting kill chain phase object by pressing 'r' to get
        the json output.
      then: I should see it, and the associated json output.
      type: tui
      when: I press 'r' on the existing kill chain phase.
    AccessNewProjectsPath:
      description: Accessing and creating a new projects path.
      domain: projects
      given: I start the app in tui mode.
      name: AccessNewProjectsPath
      scenario: Accessing and create a new projects path.
      then: I should access the HomeScreen for that <projects_path>.
      type: tui
      when: I provide a new <projects_path>.
    AccessProject:
      description: Access a project.
      domain: projects
      given: I'm in the tui app, with a project <project_name> created.
      name: AccessProject
      scenario: Access a projects by pressing 'enter' on it.
      then: I should see a list of Category STIX (sdos,scos,cdts,..) in that project.
      type: tui
      when: I press 'enter' on that project.
    AccessProjectsPath:
      description: Accessing the Projects path.
      domain: projects
      given: I start the app in tui mode.
      name: AccessProjectsPath
      scenario: Access the provided Projects path.
      then: I should access the HomeScreen for that <projects_path>.
      type: tui
      when: I provide an existing <projects_path>.
    AccessTui:
      description: Accessing the TUI of the App.
      domain: projects
      given: I launch the app using the --tui arguments.
      name: AccessTui
      scenario: Accessing the TUI of the App should show us the main screen.
      then: i should got the Starting Screen.
      type: tui
      when: The app starts.
    AttackPatternCrudl:
      description: CRUDL for the STIX 2.1 object AttackPattern.
      domain: sdos/attack_pattern
      given: An AttackPattern is created with <type_>, <name>, and <description>.
      name: AttackPatternCrudl
      scenario: Performing CRUDL operations on a STIX 2.1 AttackPattern.
      then: An AttackPattern should exist with <new_description>, <name>, and <type_>,
        and one AttackPattern should be deleted.
      type: gen_stix
      when: The AttackPattern is created, updated with <new_description>, and deleted.
    CreateKillChainPhase:
      description: Create a Kill Chain Phase
      domain: cdts/kill_chain_phase
      given: I'm in the tui app, in a valid <projects_path> and <project_name>. when
        i press 'c' on 'Kill Chain Phase' in the 'CDTs' list.
      name: CreateKillChainPhase
      scenario: Create a Kill Chain Phase STIX2.1 Object.
      then: I should have the Kill Chain Phase object created, and i should see the
        json output.
      type: tui
      when: I have a form i should fill with a valid <kill_chain_name> and <phase_name>
        then press 'enter'.
    CreateProject:
      description: Create a new project.
      domain: projects
      given: I'm in the tui app with a valid <projects_path>, and i press 'c' on the
        navtree.
      name: CreateProject
      scenario: Create a new project in projects path when pressing 'c'.
      then: The project should be created and should be visible in the navtree.
      type: tui
      when: The form should appear and in put a valid <project_name> and press 'enter'.
    DeleteAllKillChainPhase:
      description: Delete all Kill Chain Phase
      domain: cdts/kill_chain_phase
      given: I'm in the app in tui mode, with a valid <projects_path>, <project_name>,
        and i have few valid Kill Chain Phase object created with <kill_chain_name>,
        <phase_name>.
      name: DeleteAllKillChainPhase
      scenario: When pressing 'd' on 'Kill Chain Phase', we should be able to delete
        them all at once.
      then: Once validate, they should all be deleted.
      type: tui
      when: I press 'd' on the 'Kill Chain Phase' i should get a validation form to
        delete them all at once.
    DeleteKillChainPhase:
      description: Delete an existing Kill Chain Phase.
      domain: cdts/kill_chain_phase
      given: I'm in the app in tui mode, with a valid <projects_path>, <project_name>
        and i have a valid Kill chain Phase created with <kill_chain_name> and <phase_name>.
      name: DeleteKillChainPhase
      scenario: When pressing 'd' on an existing Kill chain phase object, we should
        nbe able to delete it.
      then: The Kill Chain Phase object should've been deleted.
      type: tui
      when: I press 'd' on the object, i should get a form to validate the deletion,
        when pressing 'enter' i validate it.
    DeleteProject:
      description: Delete a project and all contained objects.
      domain: projects
      given: I'm on the app in tui node, with a valid <projects_path> and a <project_name>
        created.
      name: DeleteProject
      scenario: When pressing 'd' on a project, i should be able to delete it.
      then: The project should no longer exists.
      type: tui
      when: i press 'd' on the <project_name> after completing and validating the
        deletion form.
    ExternalReferenceCrudl:
      description: CRUDL for the STIX 2.1 object ExternalReference.
      domain: cdts/external_reference
      given: An ExternalReference is created with <source_name>, <description>.
      name: ExternalReferenceCrudl
      scenario: Performing CRUDL operations on a STIX 2.1 ExternalReference.
      then: An ExternalReference should exist with <new_description>, and <source_name>,
        and one ExternalReference should be deleted.
      type: gen_stix
      when: The ExternalReference is created, updated with <new_description> and deleted.
    KillChainPhaseCrudl:
      description: CRUDL operations for the STIX 2.1 Kill Chain Phase object.
      domain: cdts/kill_chain_phase
      given: A Kill Chain Phase is created with <kill_chain_name> and <phase_name>.
      name: KillChainPhaseCrudl
      scenario: Performing CRUDL operations on a STIX 2.1 Kill Chain Phase.
      then: A Kill Chain Phase should exist with <kill_chain_name> and <phase_name>,
        and one Kill Chain Phase should be deleted.
      type: gen_stix
      when: The Kill Chain Phase is created, updated, and deleted.
    KillChainPhaseInfileCrudl:
      description: CRUDL operations for the STIX2.1 Kill Chain Phase Object, with
        persistence in a file per object.
      domain: cdts/kill_chain_phase
      given: A Kill Chain Phase is created with <kill_chain_name> and <phase_name>.
      name: KillChainPhaseInfileCrudl
      scenario: Performing CRUDL operations on a STIX2.1 Kill Chain Phase.
      then: The Kill Chain Phase should be retrieve from the file if exists.
      type: infrastructure
      when: The Kill Chain Phase is create, read, update, list and deleted.
    KillChainPhaseSerializeToStix21:
      description: Serialize a Kill Chain Phase into an STIX object.
      domain: cdts/kill_chain_phase
      given: I create a Kill Chain Phase with <kill_chain_name> and <phase_name>.
      name: KillChainPhaseSerializeToStix21
      scenario: Serialize an existing Kill Chain Phase Core object into a valid STIX2.1
        object and check the json.
      then: I should be able to get the <valid_stix21> json for that object.
      type: infrastructure
      when: I serialize that object into STIX2.1
    SearchKillChainPhase:
      description: When pressing 'r' on 'Kill Chain Phase' i have a form allowing
        us to search an object.
      domain: cdts/kill_chain_phase
      given: I'm in the app in tui mode with a valid <projects_path>, <project_name>
        and i have a valid Kill Chain Phase created with <kill_chain_name>, <phase_name>.
      name: SearchKillChainPhase
      scenario: Will search and access an existing Kill Chain Phase Object.
      then: I should see the corresponding Kill Chain Phase object and the json output.
      type: tui
      when: I press 'r' on 'Kill Chain Phase' in the navtree, i have a search form,
        when i fulfill it and pres 'enter'.
  name: GenSTIX
  path: /home/kakudou/construct/python/WiP
  types:
    - cli
    - tui
    - infrastructure
  usecases:
    CreateAttackPattern:
      description: Create a AttackPattern
      entity: AttackPattern
      name: CreateAttackPattern
      type: Create
    CreateExternalReference:
      description: Create a ExternalReference
      entity: ExternalReference
      name: CreateExternalReference
      type: Create
    CreateKillChainPhase:
      description: Create a KillChainPhase
      entity: KillChainPhase
      name: CreateKillChainPhase
      type: Create
    DeleteAttackPattern:
      description: Delete a AttackPattern
      entity: AttackPattern
      name: DeleteAttackPattern
      type: Delete
    DeleteExternalReference:
      description: Delete a ExternalReference
      entity: ExternalReference
      name: DeleteExternalReference
      type: Delete
    DeleteKillChainPhase:
      description: Delete a KillChainPhase
      entity: KillChainPhase
      name: DeleteKillChainPhase
      type: Delete
    ListAttackPattern:
      description: List a AttackPattern
      entity: AttackPattern
      name: ListAttackPattern
      type: List
    ListExternalReference:
      description: List a ExternalReference
      entity: ExternalReference
      name: ListExternalReference
      type: List
    ListKillChainPhase:
      description: List a KillChainPhase
      entity: KillChainPhase
      name: ListKillChainPhase
      type: List
    ReadAttackPattern:
      description: Read a AttackPattern
      entity: AttackPattern
      name: ReadAttackPattern
      type: Read
    ReadExternalReference:
      description: Read a ExternalReference
      entity: ExternalReference
      name: ReadExternalReference
      type: Read
    ReadKillChainPhase:
      description: Read a KillChainPhase
      entity: KillChainPhase
      name: ReadKillChainPhase
      type: Read
    UpdateAttackPattern:
      description: Update a AttackPattern
      entity: AttackPattern
      name: UpdateAttackPattern
      type: Update
    UpdateExternalReference:
      description: Update a ExternalReference
      entity: ExternalReference
      name: UpdateExternalReference
      type: Update
    UpdateKillChainPhase:
      description: Update a KillChainPhase
      entity: KillChainPhase
      name: UpdateKillChainPhase
      type: Update
